/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linked.list;

import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.*;

public class AppTest {

  // create new linked list
  LinkedList<Integer> testing = new LinkedList<>();
  ArrayList<Integer> testString = new ArrayList<>();

  public Integer randomNumber(int lower, int upper) {
    return (int) (Math.random() * (upper - lower)) + lower;
  }

  @Test
  public void emptyLinkedListTest() {

    // test for creating new linked list with null for head
    assertNull("There was an error in creating the linked List", this.testing.head);

  }

  @Test
  public void insertingInLinkedList() {
    // insert random value in the head inside linked list
    Integer[] valueToInsert = {randomNumber(0, 1000), randomNumber(0, 1000), randomNumber(0, 1000), randomNumber(0, 1000), randomNumber(0, 1000)};
    boolean checkValueOrder = true;
    for (int num : valueToInsert) {
      this.testing.insert(num);
      this.testString.add(num);
      if (this.testing.head.value != num) checkValueOrder = false;
    }
    assertTrue("There was an error in inserting method", checkValueOrder);

  }


  @Test
  public void includeLinkedList() {
    // insert random value in the head inside linked list
    int randomLength = randomNumber(5, 50);
    Integer[] valueToInclude = new Integer[randomLength];
    for (int i = 0; i < valueToInclude.length; i++) {
      valueToInclude[i] = randomNumber(500, 1000);
      this.testing.insert(valueToInclude[i]);
      this.testString.add(valueToInclude[i]);
    }
    int randomIndex = randomNumber(0, randomLength);
    assertTrue("There was an error in include method when true", this.testing.includes(valueToInclude[randomIndex]));
    assertFalse("There was an error in include method when false", this.testing.includes(randomNumber(1001, 2000)));
  }

  @Test
  public void toStringTest() {
    String actualString = "";
    for (int i = this.testString.size() - 1; i >= 0; i--) actualString += "{" + this.testString.get(i) + "} =>";
    actualString += "Null";
    assertEquals("There was an error in toString method", this.testing.toString(), actualString);
  }
}
